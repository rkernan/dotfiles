-- Made with 'mini.colors' module of https://github.com/echasnovski/mini.nvim

if vim.g.colors_name ~= nil then vim.cmd('highlight clear') end
vim.g.colors_name = "gruvbones-mini-light"

-- Highlight groups
local hi = vim.api.nvim_set_hl

hi(0, "@annotation", { link = "PreProc" })
hi(0, "@attribute", { link = "PreProc" })
hi(0, "@character", { link = "Constant" })
hi(0, "@character.special", { link = "Special" })
hi(0, "@conditional", { link = "Statement" })
hi(0, "@constant", { bold = true, fg = "#57514f" })
hi(0, "@constant.builtin", { link = "Constant" })
hi(0, "@constant.macro", { link = "Number" })
hi(0, "@debug", { link = "Special" })
hi(0, "@define", { link = "PreProc" })
hi(0, "@exception", { link = "Statement" })
hi(0, "@function.builtin", { link = "Special" })
hi(0, "@function.call", { link = "Function" })
hi(0, "@function.macro", { link = "PreProc" })
hi(0, "@include", { link = "PreProc" })
hi(0, "@keyword", { link = "Statement" })
hi(0, "@keyword.coroutine", { link = "Statement" })
hi(0, "@keyword.function", { link = "Statement" })
hi(0, "@keyword.operator", { link = "Statement" })
hi(0, "@keyword.return", { link = "Statement" })
hi(0, "@label", { link = "Statement" })
hi(0, "@lsp.type.boolean", { link = "@boolean" })
hi(0, "@lsp.type.builtinType", { link = "@type.builtin" })
hi(0, "@lsp.type.comment", { link = "@comment" })
hi(0, "@lsp.type.enum", { link = "@type" })
hi(0, "@lsp.type.enumMember", { link = "@constant" })
hi(0, "@lsp.type.escapeSequence", { link = "@string.escape" })
hi(0, "@lsp.type.formatSpecifier", { link = "@punctuation.special" })
hi(0, "@lsp.type.keyword", { link = "@keyword" })
hi(0, "@lsp.type.namespace", { link = "@namespace" })
hi(0, "@lsp.type.number", { link = "@number" })
hi(0, "@lsp.type.parameter", { link = "@parameter" })
hi(0, "@lsp.type.property", { link = "@property" })
hi(0, "@lsp.type.selfKeyword", { link = "@variable.builtin" })
hi(0, "@lsp.type.string.rust", { link = "@string" })
hi(0, "@lsp.type.typeAlias", { link = "@type.definition" })
hi(0, "@lsp.type.unresolvedReference", { sp = "#9c0003", undercurl = true })
hi(0, "@lsp.type.variable", { link = "@variable" })
hi(0, "@lsp.typemod.class.defaultLibrary", { link = "@type.builtin" })
hi(0, "@lsp.typemod.enum.defaultLibrary", { link = "@type.builtin" })
hi(0, "@lsp.typemod.enumMember.defaultLibrary", { link = "@constant.builtin" })
hi(0, "@lsp.typemod.function.defaultLibrary", { link = "@function.builtin" })
hi(0, "@lsp.typemod.keyword.async", { link = "@keyword.coroutine" })
hi(0, "@lsp.typemod.macro.defaultLibrary", { link = "@function.builtin" })
hi(0, "@lsp.typemod.method.defaultLibrary", { link = "@function.builtin" })
hi(0, "@lsp.typemod.operator.injected", { link = "@operator" })
hi(0, "@lsp.typemod.string.injected", { link = "@string" })
hi(0, "@lsp.typemod.variable.defaultLibrary", { link = "@variable.builtin" })
hi(0, "@lsp.typemod.variable.injected", { link = "@variable" })
hi(0, "@method.call", { link = "Function" })
hi(0, "@namespace", { link = "Special" })
hi(0, "@neorg.anchors.declaration", { link = "@text.reference" })
hi(0, "@neorg.anchors.declaration.delimiter", { link = "NonText" })
hi(0, "@neorg.anchors.definition.delimiter", { link = "NonText" })
hi(0, "@neorg.definitions.content", { link = "@text.emphasis" })
hi(0, "@neorg.definitions.prefix", { link = "@punctuation.delimiter" })
hi(0, "@neorg.definitions.suffix", { link = "@punctuation.delimiter" })
hi(0, "@neorg.definitions.title", { link = "@text.strong" })
hi(0, "@neorg.delimiters.horizontal_line", { link = "@punctuation.delimiter" })
hi(0, "@neorg.delimiters.strong", { link = "@punctuation.delimiter" })
hi(0, "@neorg.delimiters.weak", { link = "@punctuation.delimiter" })
hi(0, "@neorg.error", { link = "@error" })
hi(0, "@neorg.footnotes.content", { link = "@text.emphasis" })
hi(0, "@neorg.footnotes.prefix", { link = "@punctuation.delimiter" })
hi(0, "@neorg.footnotes.suffix", { link = "@punctuation.delimiter" })
hi(0, "@neorg.footnotes.title", { link = "@text.strong" })
hi(0, "@neorg.headings.1.prefix", { link = "@attribute" })
hi(0, "@neorg.headings.1.title", { link = "@attribute" })
hi(0, "@neorg.headings.2.prefix", { link = "@label" })
hi(0, "@neorg.headings.2.title", { link = "@label" })
hi(0, "@neorg.headings.3.prefix", { link = "@constant" })
hi(0, "@neorg.headings.3.title", { link = "@constant" })
hi(0, "@neorg.headings.4.prefix", { link = "@string" })
hi(0, "@neorg.headings.4.title", { link = "@string" })
hi(0, "@neorg.headings.5.prefix", { link = "@label" })
hi(0, "@neorg.headings.5.title", { link = "@label" })
hi(0, "@neorg.headings.6.prefix", { link = "@constructor" })
hi(0, "@neorg.headings.6.title", { link = "@constructor" })
hi(0, "@neorg.links.description", { link = "@text.uri" })
hi(0, "@neorg.links.description.delimiter", { link = "NonText" })
hi(0, "@neorg.links.file", { link = "@comment" })
hi(0, "@neorg.links.file.delimiter", { link = "NonText" })
hi(0, "@neorg.links.location.definition", { link = "@neorg.definitions.title" })
hi(0, "@neorg.links.location.definition.prefix", { link = "@neorg.definitions.prefix" })
hi(0, "@neorg.links.location.delimiter", { link = "NonText" })
hi(0, "@neorg.links.location.external_file", { link = "@label" })
hi(0, "@neorg.links.location.external_file.prefix", { link = "@label" })
hi(0, "@neorg.links.location.footnote", { link = "@neorg.footnotes.title" })
hi(0, "@neorg.links.location.footnote.prefix", { link = "@neorg.footnotes.prefix" })
hi(0, "@neorg.links.location.generic", { link = "@type" })
hi(0, "@neorg.links.location.generic.prefix", { link = "@type" })
hi(0, "@neorg.links.location.heading.1", { link = "@neorg.headings.1.title" })
hi(0, "@neorg.links.location.heading.1.prefix", { link = "@neorg.headings.1.prefix" })
hi(0, "@neorg.links.location.heading.2", { link = "@neorg.headings.2.title" })
hi(0, "@neorg.links.location.heading.2.prefix", { link = "@neorg.headings.2.prefix" })
hi(0, "@neorg.links.location.heading.3", { link = "@neorg.headings.3.title" })
hi(0, "@neorg.links.location.heading.3.prefix", { link = "@neorg.headings.3.prefix" })
hi(0, "@neorg.links.location.heading.4", { link = "@neorg.headings.4.title" })
hi(0, "@neorg.links.location.heading.4.prefix", { link = "@neorg.headings.4.prefix" })
hi(0, "@neorg.links.location.heading.5", { link = "@neorg.headings.5.title" })
hi(0, "@neorg.links.location.heading.5.prefix", { link = "@neorg.headings.5.prefix" })
hi(0, "@neorg.links.location.heading.6", { link = "@neorg.headings.6.title" })
hi(0, "@neorg.links.location.heading.6.prefix", { link = "@neorg.headings.6.prefix" })
hi(0, "@neorg.links.location.marker", { link = "@neorg.markers.title" })
hi(0, "@neorg.links.location.marker.prefix", { link = "@neorg.markers.prefix" })
hi(0, "@neorg.links.location.url", { link = "@text.uri" })
hi(0, "@neorg.lists.ordered.prefix", { link = "@repeat" })
hi(0, "@neorg.lists.unordered.prefix", { link = "@punctuation.delimiter" })
hi(0, "@neorg.markup.bold", { link = "@text.strong" })
hi(0, "@neorg.markup.bold.delimiter", { link = "NonText" })
hi(0, "@neorg.markup.free_form_delimiter", { link = "NonText" })
hi(0, "@neorg.markup.inline_comment", { fg = "#242120" })
hi(0, "@neorg.markup.inline_comment.delimiter", { link = "NonText" })
hi(0, "@neorg.markup.inline_math", { link = "@text.math" })
hi(0, "@neorg.markup.inline_math.delimiter", { link = "NonText" })
hi(0, "@neorg.markup.italic", { link = "@text.emphasis" })
hi(0, "@neorg.markup.italic.delimiter", { link = "NonText" })
hi(0, "@neorg.markup.spoiler", { link = "@text.danger" })
hi(0, "@neorg.markup.spoiler.delimiter", { link = "NonText" })
hi(0, "@neorg.markup.strikethrough", { strikethrough = true })
hi(0, "@neorg.markup.strikethrough.delimiter", { link = "NonText" })
hi(0, "@neorg.markup.subscript", { link = "@label" })
hi(0, "@neorg.markup.subscript.delimiter", { link = "NonText" })
hi(0, "@neorg.markup.superscript", { link = "@number" })
hi(0, "@neorg.markup.superscript.delimiter", { link = "NonText" })
hi(0, "@neorg.markup.underline", { underline = true })
hi(0, "@neorg.markup.underline.delimiter", { link = "NonText" })
hi(0, "@neorg.markup.variable", { link = "@function.macro" })
hi(0, "@neorg.markup.variable.delimiter", { link = "NonText" })
hi(0, "@neorg.markup.verbatim", { fg = "#302c2b" })
hi(0, "@neorg.markup.verbatim.delimiter", { link = "NonText" })
hi(0, "@neorg.modifiers.escape", { link = "@type" })
hi(0, "@neorg.modifiers.link", { link = "NonText" })
hi(0, "@neorg.quotes.1.content", { link = "@punctuation.delimiter" })
hi(0, "@neorg.quotes.1.prefix", { link = "@punctuation.delimiter" })
hi(0, "@neorg.quotes.2.content", { link = "Blue" })
hi(0, "@neorg.quotes.2.prefix", { link = "Blue" })
hi(0, "@neorg.quotes.3.content", { link = "Yellow" })
hi(0, "@neorg.quotes.3.prefix", { link = "Yellow" })
hi(0, "@neorg.quotes.4.content", { link = "Red" })
hi(0, "@neorg.quotes.4.prefix", { link = "Red" })
hi(0, "@neorg.quotes.5.content", { link = "Green" })
hi(0, "@neorg.quotes.5.prefix", { link = "Green" })
hi(0, "@neorg.quotes.6.content", { link = "Brown" })
hi(0, "@neorg.quotes.6.prefix", { link = "Brown" })
hi(0, "@neorg.selection_window.arrow", { link = "@none" })
hi(0, "@neorg.selection_window.heading", { link = "@annotation" })
hi(0, "@neorg.selection_window.key", { link = "@namespace" })
hi(0, "@neorg.selection_window.keyname", { link = "@constant" })
hi(0, "@neorg.selection_window.nestedkeyname", { link = "@string" })
hi(0, "@neorg.tags.carryover.begin", { link = "@label" })
hi(0, "@neorg.tags.carryover.name", { link = "@none" })
hi(0, "@neorg.tags.carryover.name.delimiter", { link = "@none" })
hi(0, "@neorg.tags.carryover.name.word", { link = "@label" })
hi(0, "@neorg.tags.carryover.parameters", { link = "@string" })
hi(0, "@neorg.tags.comment.content", { link = "@comment" })
hi(0, "@neorg.tags.ranged_verbatim.begin", { link = "@keyword" })
hi(0, "@neorg.tags.ranged_verbatim.code_block", { bg = "#d5ccaa" })
hi(0, "@neorg.tags.ranged_verbatim.document_meta.array.bracket", { link = "@punctuation.bracket" })
hi(0, "@neorg.tags.ranged_verbatim.document_meta.array.value", { link = "@none" })
hi(0, "@neorg.tags.ranged_verbatim.document_meta.authors", { link = "@annotation" })
hi(0, "@neorg.tags.ranged_verbatim.document_meta.categories", { link = "@keyword" })
hi(0, "@neorg.tags.ranged_verbatim.document_meta.created", { link = "@float" })
hi(0, "@neorg.tags.ranged_verbatim.document_meta.description", { link = "@label" })
hi(0, "@neorg.tags.ranged_verbatim.document_meta.key", { link = "@field" })
hi(0, "@neorg.tags.ranged_verbatim.document_meta.number", { link = "@number" })
hi(0, "@neorg.tags.ranged_verbatim.document_meta.object.bracket", { link = "@punctuation.bracket" })
hi(0, "@neorg.tags.ranged_verbatim.document_meta.title", { link = "@text.title" })
hi(0, "@neorg.tags.ranged_verbatim.document_meta.trailing", { link = "@repeat" })
hi(0, "@neorg.tags.ranged_verbatim.document_meta.updated", { link = "@float" })
hi(0, "@neorg.tags.ranged_verbatim.document_meta.value", { link = "@string" })
hi(0, "@neorg.tags.ranged_verbatim.document_meta.version", { link = "@float" })
hi(0, "@neorg.tags.ranged_verbatim.end", { link = "@keyword" })
hi(0, "@neorg.tags.ranged_verbatim.name", { link = "@none" })
hi(0, "@neorg.tags.ranged_verbatim.name.delimiter", { link = "@none" })
hi(0, "@neorg.tags.ranged_verbatim.name.word", { link = "@keyword" })
hi(0, "@neorg.tags.ranged_verbatim.parameters", { link = "@type" })
hi(0, "@neorg.todo_items.cancelled", { link = "NonText" })
hi(0, "@neorg.todo_items.done", { link = "@string" })
hi(0, "@neorg.todo_items.on_hold", { link = "@text.note" })
hi(0, "@neorg.todo_items.pending", { link = "@namespace" })
hi(0, "@neorg.todo_items.recurring", { link = "@repeat" })
hi(0, "@neorg.todo_items.uncertain", { link = "@boolean" })
hi(0, "@neorg.todo_items.undone", { link = "@punctuation.delimiter" })
hi(0, "@neorg.todo_items.urgent", { link = "@text.danger" })
hi(0, "@parameter.reference", { link = "@parameter" })
hi(0, "@punctuation.bracket", { link = "Delimiter" })
hi(0, "@punctuation.delimiter", { link = "Delimiter" })
hi(0, "@punctuation.special", { link = "Delimiter" })
hi(0, "@punctuation.special.markdown", { link = "Special" })
hi(0, "@repeat", { link = "Statement" })
hi(0, "@statement", { link = "Statement" })
hi(0, "@storageclass", { link = "Type" })
hi(0, "@string", { link = "Constant" })
hi(0, "@string.escape", { link = "Special" })
hi(0, "@string.escape.markdown", { link = "SpecialKey" })
hi(0, "@string.regex", { link = "Constant" })
hi(0, "@string.special", { link = "Special" })
hi(0, "@symbol", { link = "Identifier" })
hi(0, "@tag", { link = "Constant" })
hi(0, "@tag.attribute", { link = "@property" })
hi(0, "@tag.delimiter", { link = "Delimiter" })
hi(0, "@text", { link = "@none" })
hi(0, "@text.danger", { link = "Error" })
hi(0, "@text.diff.add", { link = "diffAdded" })
hi(0, "@text.diff.delete", { link = "diffRemoved" })
hi(0, "@text.emphasis", { link = "Italic" })
hi(0, "@text.emphasis.markdown", { link = "Italic" })
hi(0, "@text.environment", { link = "PreProc" })
hi(0, "@text.environment.name", { link = "Type" })
hi(0, "@text.literal", { link = "Constant" })
hi(0, "@text.literal.markdown", { link = "Type" })
hi(0, "@text.math", { link = "Special" })
hi(0, "@text.note", { link = "DiagnosticInfo" })
hi(0, "@text.reference", { link = "Constant" })
hi(0, "@text.reference.markdown", { fg = "#57514f", underline = true })
hi(0, "@text.strike", { strikethrough = true })
hi(0, "@text.strong", { link = "Bold" })
hi(0, "@text.title", { link = "Title" })
hi(0, "@text.title.markdown", { link = "Statement" })
hi(0, "@text.todo", { link = "Todo" })
hi(0, "@text.underline", { link = "Underlined" })
hi(0, "@text.uri", { link = "Underlined" })
hi(0, "@text.uri.markdown", { link = "SpecialComment" })
hi(0, "@text.warning", { link = "WarningMsg" })
hi(0, "@type.builtin", { link = "Type" })
hi(0, "@type.definition", { link = "Type" })
hi(0, "@type.qualifier", { link = "Type" })
hi(0, "@variable.builtin", { link = "Number" })
hi(0, "Bold", { bold = true })
hi(0, "Boolean", { fg = "#427b58", italic = true })
hi(0, "BufferCurrent", { link = "TabLineSel" })
hi(0, "BufferVisible", { fg = "#706966" })
hi(0, "BufferVisibleIndex", { fg = "#706966" })
hi(0, "BufferVisibleSign", { fg = "#706966" })
hi(0, "CmpItemAbbr", { fg = "#57514f" })
hi(0, "CmpItemAbbrDeprecated", { fg = "#8d8580" })
hi(0, "CmpItemAbbrDeprecatedDefault", { fg = "#988e63" })
hi(0, "CmpItemAbbrMatch", { bold = true, fg = "#3c3836" })
hi(0, "CmpItemAbbrMatchFuzzy", { bold = true, fg = "#4f4a48" })
hi(0, "CmpItemKind", { fg = "#6b6461" })
hi(0, "CmpItemKindClassDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindColorDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindConstantDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindConstructorDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindDefault", { fg = "#66605c" })
hi(0, "CmpItemKindEnumDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindEnumMemberDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindEventDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindFieldDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindFileDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindFolderDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindFunctionDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindInterfaceDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindKeywordDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindMethodDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindModuleDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindOperatorDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindPropertyDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindReferenceDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindSnippetDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindStructDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindTextDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindTypeParameterDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindUnitDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindValueDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindVariableDefault", { link = "CmpItemKind" })
hi(0, "CmpItemMenu", { fg = "#78716d" })
hi(0, "CocCodeLens", { link = "LineNr" })
hi(0, "CocErrorHighlight", { link = "DiagnosticUnderlineError" })
hi(0, "CocErrorSign", { link = "DiagnosticSignError" })
hi(0, "CocErrorVirtualText", { link = "DiagnosticVirtualTextError" })
hi(0, "CocHintHighlight", { link = "DiagnosticUnderlineHint" })
hi(0, "CocHintSign", { link = "DiagnosticSignHint" })
hi(0, "CocInfoHighlight", { link = "DiagnosticUnderlineInfo" })
hi(0, "CocInfoSign", { link = "DiagnosticSignInfo" })
hi(0, "CocMarkdownLink", { fg = "#427b58", underline = true })
hi(0, "CocMenuSel", { link = "CursorLine" })
hi(0, "CocSearch", { link = "Search" })
hi(0, "CocSelectedText", { link = "SpellBad" })
hi(0, "CocWarningHighlight", { link = "DiagnosticUnderlineWarn" })
hi(0, "CocWarningSign", { link = "DiagnosticSignWarn" })
hi(0, "CocWarningVitualText", { link = "DiagnosticVirtualTextWarn" })
hi(0, "ColorColumn", { bg = "#e8c9b3" })
hi(0, "Comment", { fg = "#988e63" })
hi(0, "Conceal", { bold = true, fg = "#66605c", italic = true })
hi(0, "Constant", { fg = "#6b6461" })
hi(0, "CurSearch", { link = "IncSearch" })
hi(0, "Cursor", { bg = "#3c3836", fg = "#fbf1c9" })
hi(0, "CursorColumn", { link = "CursorLine" })
hi(0, "CursorLine", { bg = "#f9e99e" })
hi(0, "CursorLineNr", { bold = true, fg = "#3c3836" })
hi(0, "Delimiter", { fg = "#908446" })
hi(0, "DiagnosticDeprecated", { link = "DiagnosticWarn" })
hi(0, "DiagnosticError", { link = "Error" })
hi(0, "DiagnosticHint", { fg = "#903f71" })
hi(0, "DiagnosticInfo", { fg = "#086576" })
hi(0, "DiagnosticSignError", { fg = "#9c0003" })
hi(0, "DiagnosticSignHint", { fg = "#903f71" })
hi(0, "DiagnosticSignInfo", { fg = "#086576" })
hi(0, "DiagnosticSignWarn", { fg = "#b67616" })
hi(0, "DiagnosticUnderlineError", { sp = "#9c0003", underline = true })
hi(0, "DiagnosticUnderlineHint", { sp = "#903f71", underline = true })
hi(0, "DiagnosticUnderlineInfo", { sp = "#086576" })
hi(0, "DiagnosticUnderlineWarn", { sp = "#b67616", underline = true })
hi(0, "DiagnosticUnnecessary", { link = "DiagnosticWarn" })
hi(0, "DiagnosticVirtualTextError", { bg = "#f1e2e2", fg = "#9c0003" })
hi(0, "DiagnosticVirtualTextHint", { bg = "#f0e1e9", fg = "#903f71" })
hi(0, "DiagnosticVirtualTextInfo", { bg = "#d5e9f0", fg = "#086576" })
hi(0, "DiagnosticVirtualTextWarn", { bg = "#f1e3da", fg = "#b67616" })
hi(0, "DiagnosticWarn", { link = "WarningMsg" })
hi(0, "DiffAdd", { bg = "#e5e1ba" })
hi(0, "DiffChange", { bg = "#d1e3e9" })
hi(0, "DiffDelete", { bg = "#eddcdc" })
hi(0, "DiffText", { bg = "#a4c3cf", fg = "#3c3836" })
hi(0, "Directory", { bold = true })
hi(0, "Error", { fg = "#9c0003" })
hi(0, "ErrorMsg", { link = "Error" })
hi(0, "FlashBackdrop", { fg = "#988e63" })
hi(0, "FlashLabel", { bg = "#1dd9fc", fg = "#3c3836" })
hi(0, "FloatBorder", { fg = "#7d723c" })
hi(0, "FoldColumn", { bold = true, fg = "#aa9c54" })
hi(0, "Folded", { bg = "#d9c76c", fg = "#585028" })
hi(0, "Function", { fg = "#3c3836" })
hi(0, "GitGutterAdd", { link = "GitSignsAdd" })
hi(0, "GitGutterChange", { link = "GitSignsChange" })
hi(0, "GitGutterDelete", { link = "GitSignsDelete" })
hi(0, "GitSignsAdd", { fg = "#7a750e" })
hi(0, "GitSignsChange", { fg = "#086576" })
hi(0, "GitSignsDelete", { fg = "#9c0003" })
hi(0, "GitSignsStagedAdd", { fg = "#3d3a07" })
hi(0, "GitSignsStagedAddLn", { bg = "#e5e1ba" })
hi(0, "GitSignsStagedAddNr", { fg = "#3d3a07" })
hi(0, "GitSignsStagedChange", { fg = "#04323b" })
hi(0, "GitSignsStagedChangeLn", { bg = "#d1e3e9" })
hi(0, "GitSignsStagedChangeNr", { fg = "#04323b" })
hi(0, "GitSignsStagedChangedelete", { fg = "#04323b" })
hi(0, "GitSignsStagedChangedeleteLn", { bg = "#d1e3e9" })
hi(0, "GitSignsStagedChangedeleteNr", { fg = "#04323b" })
hi(0, "GitSignsStagedDelete", { fg = "#4e0001" })
hi(0, "GitSignsStagedDeleteNr", { fg = "#4e0001" })
hi(0, "GitSignsStagedTopdelete", { fg = "#4e0001" })
hi(0, "GitSignsStagedTopdeleteNr", { fg = "#4e0001" })
hi(0, "HopNextKey", { bold = true, fg = "#903f71", underline = true })
hi(0, "HopNextKey1", { bold = true, fg = "#427b58", underline = true })
hi(0, "HopNextKey2", { fg = "#086576" })
hi(0, "HopUnmatched", { fg = "#988e63" })
hi(0, "Identifier", { fg = "#57514f" })
hi(0, "IncSearch", { bg = "#d66dac", bold = true, fg = "#fbf1c9" })
hi(0, "IndentBlanklineChar", { fg = "#e1d28b" })
hi(0, "Italic", { italic = true })
hi(0, "LeapLabelPrimary", { bg = "#e9b9d3", bold = true, fg = "#3c3836", nocombine = true })
hi(0, "LeapLabelSecondary", { bg = "#a4c3cf", bold = true, fg = "#3c3836", nocombine = true })
hi(0, "LeapLabelSelected", { link = "IncSearch" })
hi(0, "LeapMatch", { bold = true, nocombine = true, underline = true })
hi(0, "LineNr", { fg = "#aa9c54" })
hi(0, "LspCodeLens", { link = "LineNr" })
hi(0, "LspReferenceRead", { link = "ColorColumn" })
hi(0, "LspReferenceText", { link = "ColorColumn" })
hi(0, "LspReferenceWrite", { link = "ColorColumn" })
hi(0, "MasonError", { link = "Error" })
hi(0, "MasonHeader", { bg = "#b67616", bold = true, fg = "#fbf1c9" })
hi(0, "MasonHighlight", { fg = "#086576" })
hi(0, "MasonHighlightBlock", { bg = "#086576", fg = "#fbf1c9" })
hi(0, "MasonHighlightBlockBold", { bg = "#086576", bold = true, fg = "#fbf1c9" })
hi(0, "MasonHighlightBlockBoldSecondary", { bg = "#b67616", bold = true, fg = "#fbf1c9" })
hi(0, "MasonHighlightBlockSecondary", { bg = "#b67616", fg = "#fbf1c9" })
hi(0, "MasonHighlightSecondary", { fg = "#b67616" })
hi(0, "MasonMuted", { fg = "#6b6461" })
hi(0, "MasonMutedBlock", { bg = "#6b6461", fg = "#fbf1c9" })
hi(0, "MasonMutedBlockBold", { bg = "#6b6461", bold = true, fg = "#fbf1c9" })
hi(0, "MatchParen", { link = "Search" })
hi(0, "MiniJump2dDim", { fg = "#988e63" })
hi(0, "MiniJump2dSpot", { bg = "#ffffff", bold = true, fg = "#000000", nocombine = true })
hi(0, "MiniJump2dSpotAhead", { bg = "#ffffff", fg = "#808080", nocombine = true })
hi(0, "MiniJump2dSpotUnique", { bg = "#ffffff", bold = true, fg = "#000000", nocombine = true })
hi(0, "MoreMsg", { bold = true, fg = "#7a750e" })
hi(0, "NeogitDiffAddHighlight", { link = "DiffAdd" })
hi(0, "NeogitDiffContextHighlight", { link = "CursorLine" })
hi(0, "NeogitDiffDeleteHighlight", { link = "DiffDelete" })
hi(0, "NeogitHunkHeader", { link = "LineNr" })
hi(0, "NeogitHunkHeaderHighlight", { bg = "#f9e99e", bold = true, fg = "#3c3836" })
hi(0, "NeogitNotificationError", { link = "DiagnosticError" })
hi(0, "NeogitNotificationInfo", { link = "DiagnosticInfo" })
hi(0, "NeogitNotificationWarning", { link = "DiagnosticWarn" })
hi(0, "NnnNormal", { link = "NvimTreeNormal" })
hi(0, "NnnNormalNC", { link = "NnnNormal" })
hi(0, "NnnVertSplit", { link = "NnnWinSeparator" })
hi(0, "NnnWinSeparator", { link = "NvimTreeWinSeparator" })
hi(0, "NoiceCmdlineIcon", { fg = "#086576" })
hi(0, "NoiceCmdlineIconSearch", { link = "WarningMsg" })
hi(0, "NoiceCmdlinePopupBorder", { link = "NoiceCmdlineIcon" })
hi(0, "NoiceCmdlinePopupBorderSearch", { link = "WarningMsg" })
hi(0, "NoiceCmdlinePopupTitle", { link = "NoiceCmdlineIcon" })
hi(0, "NoiceCompletionItemKindDefault", { fg = "#6b6461" })
hi(0, "NoiceConfirmBorder", { link = "NoiceCmdlineIcon" })
hi(0, "NonText", { fg = "#beae5e" })
hi(0, "Normal", { bg = "#fbf1c9", fg = "#3c3836" })
hi(0, "NormalFloat", { bg = "#eedb78" })
hi(0, "NotifyDEBUGIcon", { link = "DiagnosticHint" })
hi(0, "NotifyDEBUGTitle", { link = "DiagnosticHint" })
hi(0, "NotifyERRORIcon", { link = "DiagnosticError" })
hi(0, "NotifyERRORTitle", { link = "DiagnosticError" })
hi(0, "NotifyINFOIcon", { link = "DiagnosticInfo" })
hi(0, "NotifyINFOTitle", { link = "DiagnosticInfo" })
hi(0, "NotifyTRACEIcon", { link = "DiagnosticHint" })
hi(0, "NotifyTRACETitle", { link = "DiagnosticHint" })
hi(0, "NotifyWARNIcon", { link = "DiagnosticWarn" })
hi(0, "NotifyWARNTitle", { link = "DiagnosticWarn" })
hi(0, "Number", { fg = "#3c3836" })
hi(0, "NvimTreeCursorColumn", { link = "NvimTreeCursorLine" })
hi(0, "NvimTreeCursorLine", { bg = "#f4e07b" })
hi(0, "NvimTreeGitDeleted", { link = "diffRemoved" })
hi(0, "NvimTreeGitDirty", { link = "diffChanged" })
hi(0, "NvimTreeGitNew", { link = "diffAdded" })
hi(0, "NvimTreeNormal", { bg = "#f9e99e", fg = "#3c3836" })
hi(0, "NvimTreeRootFolder", { bold = true, fg = "#086576" })
hi(0, "NvimTreeSpecialFile", { fg = "#903f71", underline = true })
hi(0, "NvimTreeSymlink", { fg = "#086576" })
hi(0, "NvimTreeWinSeparator", { fg = "#fbf1c9" })
hi(0, "Operator", { fg = "#9c0003" })
hi(0, "Pmenu", { bg = "#ebd876" })
hi(0, "PmenuSbar", { bg = "#b5a65a" })
hi(0, "PmenuSel", { bg = "#cdbc66" })
hi(0, "PmenuThumb", { bg = "#fdf9eb" })
hi(0, "PreProc", { link = "Statement" })
hi(0, "Question", { link = "MoreMsg" })
hi(0, "Search", { bg = "#e9b9d3", fg = "#3c3836" })
hi(0, "SignColumn", { link = "LineNr" })
hi(0, "Sneak", { link = "Search" })
hi(0, "SneakLabel", { link = "WildMenu" })
hi(0, "SneakLabelMask", { bg = "#903f71", fg = "#903f71" })
hi(0, "Special", { bold = true, fg = "#66605c" })
hi(0, "SpecialComment", { fg = "#988e63" })
hi(0, "SpecialKey", { fg = "#beae5e", italic = true })
hi(0, "SpellBad", { fg = "#8b2627", sp = "#9c0003", undercurl = true })
hi(0, "SpellCap", { fg = "#8b2627", sp = "#bc0004", undercurl = true })
hi(0, "SpellLocal", { link = "SpellCap" })
hi(0, "SpellRare", { fg = "#8b2627", sp = "#b67616", undercurl = true })
hi(0, "Statement", { fg = "#9c0003", italic = true })
hi(0, "StatusLine", { bg = "#e5d273", fg = "#3c3836" })
hi(0, "StatusLineNC", { bg = "#f4e07b", fg = "#706966" })
hi(0, "TabLine", { link = "StatusLine" })
hi(0, "TabLineFill", { link = "StatusLineNC" })
hi(0, "TelescopeBorder", { fg = "#7d723c" })
hi(0, "TelescopeMatching", { bold = true, fg = "#903f71" })
hi(0, "TelescopeSelection", { link = "CursorLine" })
hi(0, "TelescopeSelectionCaret", { bg = "#f9e99e", fg = "#9c0003" })
hi(0, "TermCursor", { link = "Cursor" })
hi(0, "TermCursorNC", { link = "lCursor" })
hi(0, "Title", { bold = true, fg = "#3c3836" })
hi(0, "Todo", { bold = true, underline = true })
hi(0, "TroubleNormal", { link = "Function" })
hi(0, "TroubleSource", { link = "Constant" })
hi(0, "TroubleText", { link = "Function" })
hi(0, "Type", { fg = "#635a28" })
hi(0, "Underlined", { underline = true })
hi(0, "VertSplit", { fg = "#aa9c54" })
hi(0, "Visual", { bg = "#ddd9d7" })
hi(0, "WarningMsg", { fg = "#b67616" })
hi(0, "WhichKey", { link = "Statement" })
hi(0, "WhichKeyGroup", { link = "Special" })
hi(0, "WhichKeySeparator", { fg = "#aa9c54" })
hi(0, "WhichKeyValue", { link = "Constant" })
hi(0, "WildMenu", { bg = "#903f71", fg = "#fbf1c9" })
hi(0, "diffAdded", { fg = "#7a750e" })
hi(0, "diffChanged", { fg = "#086576" })
hi(0, "diffFile", { bold = true, fg = "#b67616" })
hi(0, "diffIndexLine", { fg = "#b67616" })
hi(0, "diffLine", { bold = true, fg = "#903f71" })
hi(0, "diffNewFile", { fg = "#7a750e", italic = true })
hi(0, "diffOldFile", { fg = "#9c0003", italic = true })
hi(0, "diffRemoved", { fg = "#9c0003" })
hi(0, "gitcommitOverflow", { link = "WarningMsg" })
hi(0, "helpHyperTextEntry", { link = "Special" })
hi(0, "helpHyperTextJump", { link = "Constant" })
hi(0, "helpOption", { link = "Constant" })
hi(0, "helpSpecial", { link = "Type" })
hi(0, "lCursor", { bg = "#615b58", fg = "#fbf1c9" })
hi(0, "markdownCode", { link = "Type" })
hi(0, "markdownLinkText", { fg = "#57514f", underline = true })
hi(0, "markdownLinkTextDelimiter", { link = "Delimiter" })
hi(0, "markdownUrl", { link = "SpecialComment" })
hi(0, "nvim_set_hl_x_hi_clear_bugfix", { fg = "#ff0000" })

-- Terminal colors
local g = vim.g

g.terminal_color_0 = "#fbf1c9"
g.terminal_color_1 = "#9c0003"
g.terminal_color_2 = "#7a750e"
g.terminal_color_3 = "#b67616"
g.terminal_color_4 = "#086576"
g.terminal_color_5 = "#903f71"
g.terminal_color_6 = "#427b58"
g.terminal_color_7 = "#3c3836"
g.terminal_color_8 = "#d9c76b"
g.terminal_color_9 = "#860002"
g.terminal_color_10 = "#656106"
g.terminal_color_11 = "#97610d"
g.terminal_color_12 = "#055565"
g.terminal_color_13 = "#812e63"
g.terminal_color_14 = "#306646"
g.terminal_color_15 = "#66605c"
