#!/usr/bin/env bash

set -e

stow() {
  local pkg="$1"
  command stow -t "$HOME" -v $@ "$pkg"
}

unstow() {
  local pkg="$1"
  shift 1
  command stow -t "$HOME" -vD $@ "$pkg"
}

check_command() {
  local cmd="$1"
  local exec="$(which "$cmd" 2> /dev/null || true)"
  if [ -z "$exec" ]; then
    (>&2 echo -e "$cmd\t->")
    return 1
  else
    echo -e "$cmd\t-> $exec"
    return 0
  fi
}

guess_target() {
  if [ $(command -v pacman) ]; then
    # arch linux
    echo "cli gui"
  elif [ $(command -v wsl.exe) ]; then
    # WSL
    if [ -e ~/.work ]; then
      echo "cli wsl wsl-work"
    else
      echo "cli wsl"
    fi
  else
    # other
    echo "cli"
  fi
  # always check health
  echo "checkhealth"
}

readonly targets=${*:-$(guess_target)}

# don't clobber these directories
mkdir -p "${HOME}/.config"
mkdir -p "${HOME}/.local/bin"
mkdir -p "${HOME}/.virtualenvs"

for target in $targets; do
  case $target in
    checkhealth)
      # commands
      check_command asdf    || true
      check_command bat     || true
      check_command brew    || true
      check_command cargo   || true
      check_command fd      || true
      check_command fish    || true
      check_command fzf     || true
      check_command git-lfs || true
      check_command go      || true
      check_command nvim    || true
      check_command rg      || true
      check_command rustup  || true
      check_command stow    || true
      check_command tmux    || true
      check_command vf      || true
      ;;
    cli)
      stow cli --defer='.config/nvim/lazy-lock.json'
      ;;
    gui)
      stow gui
      ;;
    homebrew)
      if ! check_command brew &> /dev/null; then
        curl -sL https://raw.githubusercontent.com/Homebrew/install/master/install.sh | bash -s
      else
        brew update
      fi
      brew bundle --upgrade
      # setup asdf
      asdf plugin add python
      # setup fzf
      $(brew --prefix)/opt/fzf/install --key-bindings --completion --no-update-rc --xdg
      # setup virtualfish
      vf install auto_activation global_requirements environment
      ;;
    groovyls)
      mkdir -p "${HOME}/.local/lib"
      pushd "${HOME}/.local/lib"
      rm -rf "groovy-language-server"
      git clone https://github.com/GroovyLanguageServer/groovy-language-server.git
      pushd "groovy-language-server"
      ./gradlew build
      popd
      popd
      ;;
    unstow)
      for d in $(find . -mindepth 1 -maxdepth 1 -type d -not -path '*/\.git/*' -printf '%P\n'); do
        unstow $d || true
      done
      ;;
    wsl)
      stow wsl
      check_command fish &> /dev/null && fish -c "set -Ux AUTOSTART_TMUX 1" || true
      ;;
    wsl-work)
      stow wsl-work --override='.config/nvim/lazy-lock.json'
      ;;
    *)
      (>&2 echo "Unknown target $target")
      exit 1
      ;;
  esac
done
